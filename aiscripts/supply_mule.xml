<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="supplymule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://x4libonline.ddns.net\libraries\aiscripts.xsd" version="1">
	<!-- Setup context menu order-->
	<order id="SupplyMule" name="M4- Supply Mule" description="Supplys own Stations Needs" category="trade" infinite="true">
		<params>
			<!-- menu option: Source Station (Define Source Station)-->
			<param name="sourceStation" required="false" default="null" type="object" text="Source Station" comment="The source station">
				<input_param name="class" value="[class.station]" />
			</param>
			<!-- menu option: Assign Ship to Station (Are we assigning this ship to a station if player owned.)-->
			<param name="assignSrc" type="bool" default="false" text="Assign Ship To Station" comment="Assign to the source station if it's the players." />
			<!-- menu option: Serve Source Only (will only serve the source station if used)-->
			<param name="dedicatedServe" type="bool" default="false" text="Serve Source Only" comment="Will only serve the configured source station" />
			<!-- menu option: Player Stations Only (will only buy from player owned station if used)-->
			<param name="tradeWithOwn" required="false" type="bool" default="false" text="Player Stations Only" comment="Buys from player stations only" />
			<!-- menu option: Max Trades (Maximum trades per buy run)-->
			<param name="maxtrades" required="false" default="[5 + this.ship.pilot.skill.piloting * 2, 20].min" type="number" text="Max Trades" comment="Max Trades per buy run.">
				<input_param name="startvalue" value="[5 + this.ship.pilot.skill.piloting * 2, 20].min" />
				<input_param name="min" value="1" />
				<input_param name="max" value="5 + this.ship.pilot.skill.piloting * 2" />
				<input_param name="step" value="1" />
			</param>
			<!-- menu option: Max Distance (Maximum Jumpes to buy)-->
			<param name="maxDist" required="false" default="this.ship.pilot.skill.piloting * 2" type="number" text="Max Jumps" comment="Max gate distance to buy.">
				<input_param name="startvalue" value="this.ship.pilot.skill.piloting * 2" />
				<input_param name="min" value="0" />
				<input_param name="max" value="this.ship.pilot.skill.piloting * 2" />
				<input_param name="step" value="1" />
			</param>
			<!-- menu option: Give Builders Priority (Supply builder sites before other station needs if used)-->
			<param name="builder" type="bool" default="true" text="Give Builders Priority" comment="Prioritizes supplying build sites before station needs." />
			<!-- menu option: WareBasket List-->
			<param name="specialWareBasket" required="false" default="[]" type="list" text="Wares (all by default)" comment="Warebasket">
				<input_param name="type" value="'ware'" />
				<input_param name="cancarry" value="this.ship" />
			</param>
		</params>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true" /> <!-- no idea wtf this is for-->
		</requires>
	</order>

	<interrupts>
		<handler ref="AttackHandler" />
		<handler ref="MissileLockHandler" />
		<handler ref="ScannedHandler" />
		<handler ref="InspectedHandler" />
		<handler ref="FoundAbandonedHandler" />
		<handler ref="ResupplyHandler" />
		<handler ref="JobRemoveRequestHandler" />
		<handler ref="TargetInvalidHandler" />
	</interrupts>

	<init>
		<set_value name="$debugchance" exact="100"/>
		<set_value name="$object" exact="this.assignedcontrolled" />
		<set_order_syncpoint_reached order="this.ship.order" />
		<set_command_action commandaction="commandaction.searchingtrades" />
		<do_if value="$sourceStation and ($sourceStation.owner == this.ship.owner) and $assignSrc">
			<set_object_commander object="this.ship" commander="$sourceStation"  assignment="assignment.trade" />
		</do_if>
	</init>

	<attention min="unknown">
		<actions>
			<label name="start" />
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'ScriptStart'" output="false" append="false" />
			<set_value name="$StartTime" exact="player.age" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<do_if value="$dedicatedServe and not $sourceStation">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Invalid Config: dedicatedServe (No Station configured)'" output="false" append="true" />
				<set_value name="$dedicatedServe" exact="false" />
			</do_if>

			<do_if value="$assignSrc and not $sourceStation">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Invalid Config: assignSrc (No Station configured)'" output="false" append="true" />
				<set_value name="$assignSrc" exact="false" />
			</do_if>

			<!--here we want to copy settings to subordinates-->
			<set_value name="$subordinates" exact="this.ship.subordinates" />
			<set_value name="$subNr" exact="$subordinates.count" />
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'found subordinates: '+$subNr" output="false" append="true" />
			<do_all exact="$subNr" counter="$nr">
				<set_value name="$subordinate" exact="$subordinates.{$nr}" />
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'  '+$nr+' '+$subordinate.knownname" output="false" append="true" />
				<do_if value="$subordinate.type != this.ship.type">
					<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'    not same shiptype: '+$subordinate.type+' and '+this.ship.type" output="false" append="true" />
					<continue />
				</do_if>
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'    copying default behavior'" output="false" append="true" />
				<remove_object_commander object="$subordinate" />
				<create_order object="$subordinate" default="true" id="'SupplyMule'">
					<param name="sourceStation" value="$sourceStation" />
					<param name="assignSrc" value="$assignSrc" />
					<param name="dedicatedServe" value="$dedicatedServe" />
					<param name="tradeWithOwn" value="$tradeWithOwn" />
					<param name="maxtrades" value="5 + this.ship.pilot.skill.piloting * 2" />
					<param name="maxDist" value="@this.ship.pilot.skill.piloting * 2" />
					<param name="builder" value="$builder" />
					<param name="specialWareBasket" value="$specialWareBasket" />
				</create_order>
				<wait min="50ms" max="150ms" />
			</do_all>
			<remove_value name="$subordinates" />
			<remove_value name="$subNr" />
			<remove_value name="$subordinate" />


			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Setting subordinates used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<create_list name="$Supplier" />
			<create_list name="$needs" />
			<set_value name="$ShipCapacity" exact="this.ship.cargo.capacity.all" />
			<set_value name="$MinCargoSize" exact="$ShipCapacity / $maxtrades" />
			<set_value name="$StartPosition" exact="if $dedicatedServe and $sourceStation then $sourceStation else this.ship" />

			<!-- Sell leftover cargo before resuming regular Mule routine -->
			<set_value name="$profitScale" exact="50"/>
			<set_value name="$pilotSkill" exact="this.ship.pilot.skill.piloting" />
			<set_value name="$maxBuyRelPrice" exact="((-0.325-0.025*($pilotSkill)f)/90.0-0.01)*($profitScale)f+1-(-0.325-0.025*($pilotSkill)f)/9.0"/>
			<set_value name="$searchStep" exact="(1.0-$maxBuyRelPrice)/4.0"/>

			<set_value name="$cargo" exact="this.ship.cargo.list" />

			<do_all exact="$cargo.count" counter="$wareInCargo">
				<wait min="50ms" max="150ms"/>

				<set_value name="$currentWare" exact="$cargo.{$wareInCargo}"/>
				<set_value name="$amount" exact="this.ship.cargo.{$currentWare}.count"/>
				<debug_to_file chance="$debugchance" name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'trying to sell '+$amount+' '+$currentWare+' from cargo'"/>

				<do_all exact="5" counter="$reduction">
					<!--searching suiting buy offer, will search 5 times reducing requirements each time by 20% (just want to get rid of that stuff at some point)-->
					<find_buy_offer tradepartner="this.ship" space ="player.galaxy" result="$buyOffer" wares="$currentWare">
						<match_buyer tradesknownto="this.owner">
							<match_gate_distance object="this.ship" min="0" max="8">
								<blacklist group="blacklistgroup.civilian" object="this.ship" />
							</match_gate_distance>
							<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
							<match_parent>
								<match_parent>
								  <match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship"/>
								  <match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship"/>
								</match_parent>
							</match_parent>
						</match_buyer>
						<relativeprice min="-$maxBuyRelPrice-(($reduction)f-1.0)*$searchStep-0.001"/>
						<amount min="$amount*(0.8^($reduction-1))"/>
					</find_buy_offer>
					<wait min="50ms" max="150ms" />
					
					<do_if value="$buyOffer == null">
						<debug_to_file chance="$debugchance" name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'  could not find buyer for min amount: '+$amount*(0.8^($reduction-1))+ ' min relative price: '+(-$maxBuyRelPrice-(($reduction)f-1.0)*$searchStep-0.001)+', max gates :'+($maxSell+$reduction-1)"/>
						<continue/>
					</do_if>

					<set_value name="$amount" exact="[$amount,$buyOffer.amount].min"/>

					<debug_to_file chance="$debugchance" name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'  found buyer: ownername: '+$buyOffer.owner.knownname+'('+$buyOffer.owner.owner.knownname+'), unitprice: '+$buyOffer.unitprice+', amount: '+$buyOffer.amount+', relative price: '+$buyOffer.relativeprice+', totalprice: '+$buyOffer.price+', sector: '+$buyOffer.owner.sector.knownname+', gates from this ship: '+$buyOffer.owner.gatedistance.{this.ship}+', gates from home (from ship if not homebound): '+$buyOffer.owner.gatedistance.{this.ship}+'. selling amount: '+$amount"/>

					<do_if value="$buyOffer.available">
						<write_to_logbook category="general" title="'TravelMule: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="$buyOffer.unitprice*$amount" text="'Selling '+$amount+' '+$currentWare+', unitprice: '+$buyOffer.unitprice/100"/>
						<create_trade_order object="this.ship" amount="$amount" tradeoffer="$buyOffer"/>
						<debug_to_file name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'  trade created'"/>
						<resume label="end"/>
					</do_if>
					<debug_to_file chance="$debugchance" name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'  offer not available anymore'"/>
				</do_all>
				<show_notification text="['TravelMule: '+this.ship.knownname+' ('+this.ship.idcode+')', '', 'can\'t empty cargo', [$amount+' '+$currentWare, 255, 192, 126]]" sound="notification_warning" />
				<write_to_logbook category="general" title="'TravelMule: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" text="'can\'t get rid of '+$amount+' '+$currentWare+' from cargo, what should I do?'"/>
			</do_all>
			<remove_value name="$searchStep"/>
			<remove_value name="$cargo"/>
			<remove_value name="$buyOffer"/>

			<do_if value="this.ship.cargo.free.container lt (this.ship.cargo.capacity.container/10)">
				<debug_to_file chance="$debugchance" name="'travelmule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'TravelMule'" text="'  cargo is full =('"/>
				<wait min="50ms" max="150ms"/>
				<resume label="start"/>
			</do_if>

			<!-- Debug: Selling left over wares performance metrics -->
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Selling leftover cargo used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<!-- Debug: Defined Wares  -->
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Define Wares'" output="false" append="true" />
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'dedicated serve: ' +$dedicatedServe" output="false" append="true" />
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'sourceStation: ' +$sourceStation" output="false" append="true" />

			<do_if value="$dedicatedServe and $sourceStation">
				<!-- I don't understand why there was a need for the level of complexity that was here. -->
				<!-- It seems like we just need to find all trade offers from the sourceStation? -->
				<!-- Ah, this strips out some logic that sets trade offers on the station if it thinks it's a trade station. -->
				<find_buy_offer tradepartner="this.ship" buyer="$sourceStation" result="$specialWareBasket" multiple="true">
					<match_buyer>
						<match_gate_distance object="this.ship" min="0">
							<blacklist group="blacklistgroup.civilian" object="this.ship" />
						</match_gate_distance>
						<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
						<match_parent>
							<match_parent>
							  <match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship"/>
							  <match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship"/>
							</match_parent>
						</match_parent>
					</match_buyer>
				</find_buy_offer>

				<set_value name="$wareBasket" exact="$specialWareBasket" />
			</do_if>

			<do_else>
				<do_if value="$specialWareBasket == []">
					<set_value name="$AllWares" exact="[ware.spacefuel,ware.spaceweed,ware.advancedcomposites,ware.advancedelectronics,ware.antimattercells,ware.antimatterconverters,ware.claytronics,
                     ware.dronecomponents,ware.engineparts,ware.fieldcoils,ware.hullparts,ware.refinedmetals,ware.scanningarrays,ware.shieldcomponents,ware.siliconwafers,
                     ware.teladianium,ware.turretcomponents,ware.water,ware.wheat,ware.energycells,ware.foodrations,ware.graphene,ware.majadust,ware.majasnails,ware.meat,
                     ware.microchips,ware.quantumtubes,ware.medicalsupplies,ware.missilecomponents,ware.nostropoil,ware.plasmaconductors,ware.smartchips,ware.sojabeans,
                     ware.sojahusk,ware.spices,ware.sunriseflowers,ware.superfluidcoolant,ware.swampplant,ware.weaponcomponents]" />
					<do_all exact="$AllWares.count" counter="$v9">
						<append_to_list name="$specialWareBasket" exact="$AllWares.{$v9}" />
					</do_all>
				</do_if>
				<set_value name="$wareBasket" exact="$specialWareBasket" />
			</do_else>

			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Setting Warebasket used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'builder: ' +$builder" output="false" append="true" />

			<!-- Find build site demands (used when 'Give Builders Priority') -->
			<do_if value="$builder">
				<find_buy_offer space="player.galaxy" result="$needs" wares="$wareBasket" multiple="true" excludeempty="false">
					<match_buyer class="class.buildstorage" owner="this.ship.owner">
						<match_gate_distance object="$StartPosition" max="$maxDist">
							<blacklist group="blacklistgroup.civilian" object="this.ship" />
						</match_gate_distance>
						<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
						<match_parent>
							<match_parent>
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship" />
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship" />
							</match_parent>
						</match_parent>
					</match_buyer>
				</find_buy_offer>

				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'builder needs: ' +$needs" output="false" append="true" />

				<do_if value="$needs.count">
					<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="$needs.count + ' Build demands found'" output="false" append="true" />
					<set_value name="$BuilderList" exact="true" />

					<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Finding building needs used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
					<set_value name="$PerformanceTime" exact="player.age" />

					<!-- here we're skipping ahead past the next block!!! -->
					<resume label="SortTrades" />
				</do_if>
			</do_if>


			<!-- Find supply demands -->
			<label name="Supply" />
			<set_value name="$BuilderList" exact="false" />
			<do_if value="$needs.count == 0">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Continue with regular Demands'" output="false" append="true" />
				<do_if value="$dedicatedServe">
					<find_buy_offer tradepartner="this.ship" buyer="$sourceStation" result="$needs" wares="$wareBasket" multiple="true">
						<match_buyer>
							<match_gate_distance object="$StartPosition" max="$maxDist">
								<blacklist group="blacklistgroup.civilian" object="this.ship" />
							</match_gate_distance>
							<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
							<match_parent>
								<match_parent>
									<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship" />
									<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship" />
								</match_parent>
							</match_parent>
						</match_buyer>
					</find_buy_offer>
				</do_if>
				<do_else>
					<find_buy_offer space="player.galaxy" result="$needs" wares="$wareBasket" multiple="true" excludeempty="false">
						<match_buyer owner="this.ship.owner">
							<match_gate_distance object="$StartPosition" max="$maxDist">
								<blacklist group="blacklistgroup.civilian" object="this.ship" />
							</match_gate_distance>
							<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
							<match_parent>
								<match_parent>
									<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship" />
									<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship" />
								</match_parent>
							</match_parent>
						</match_buyer>
					</find_buy_offer>
				</do_else>
			</do_if>

			<!-- Debug: Supply needs performance metrics-->
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Finding supply needs used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<!-- Sort Demands -->
			<label name="SortTrades" />
			<create_list name="$needsValues" />
			<do_all exact="$needs.count" counter="$vy">
				<do_if value="$needs.{$vy}.owner.cargo.{$needs.{$vy}.ware}.target">
					<append_to_list name="$needsValues" exact="(($needs.{$vy}.desiredamount)f / ($needs.{$vy}.owner.cargo.{$needs.{$vy}.ware}.target)f)*1000" />
				</do_if>	
			</do_all>

			<!-- This sorting method should be replaced with vanilla function at some stage ;Misunderstood Wookiee -->
			<run_script name="'quicksort'">
				<param name="objects" value="$needs" />
				<param name="values" value="$needsValues" />
				<save_retval name="sortedobject" variable="$needs2" />
				<save_retval name="sortedvalue" variable="$needs2Values" />
			</run_script>

			<do_if value="$needs.count gt $needs2.count">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Quicksort execution failed, is quicksort installed?'" output="false" append="true" />
				<sort_trades name="$needs2" tradelist="$needs" sorter="stocklevel" />
			</do_if>

			<!-- Invert Demand (Least stock first) and only search offers for demanded wares -->
			<create_list name="$Demands" />
			<do_all exact="$needs2.count" counter="$vy">
				<append_to_list name="$Demands" exact="$needs2.{$needs2.count-$vy+1}" />
				<do_if value="not $wareBasket.indexof.{$needs2.{$needs2.count-$vy+1}.ware}">
					<append_to_list name="$wareBasket" exact="$needs2.{$needs2.count-$vy+1}.ware" />
				</do_if>
			</do_all>


			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Sorting needs used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<do_all exact="$Demands.count" counter="$vy1">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Sorted Objects: ' + $Demands.{$vy1}.owner.idcode + ' Ware: ' + $Demands.{$vy1}.ware.id + ' Value: ' + (($Demands.{$vy1}.desiredamount)f / ($Demands.{$vy1}.owner.cargo.{$Demands.{$vy1}.ware}.target)f)*1000 + ' Demand: ' + $Demands.{$vy1}.desiredamount + ' Max Store: ' + $Demands.{$vy1}.owner.cargo.{$Demands.{$vy1}.ware}.target" output="false" append="true" />
			</do_all>

			<!-- Trade only with own stations -->
			<do_if value="$tradeWithOwn">
				<find_sell_offer tradepartner="this.ship" space="player.galaxy" result="$Supplier" wares="$wareBasket" multiple="true">
					<match_seller class="class.station">
						<match owner="this.ship.owner" />
						<match_gate_distance object="$StartPosition" max="$maxDist" />
						<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
						<match_parent>
							<match_parent>
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship" />
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship" />
							</match_parent>
						</match_parent>
					</match_seller>
				</find_sell_offer>
			</do_if>


			<!-- Trade with everyone -->
			<do_else>
				<find_sell_offer tradepartner="this.ship" space="player.galaxy" result="$Supplier" wares="$wareBasket" multiple="true">
					<match_seller tradesknownto="this.owner" class="class.station">
						<match_relation_to object="this.ship" relation="neutral" comparison="ge" />
						<match_gate_distance object="$StartPosition" min="0" max="$maxDist">
							<blacklist group="blacklistgroup.civilian" object="this.ship" />
						</match_gate_distance>
						<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.objectactivity" object="this.ship"/>
						<match_parent>
							<match_parent>
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectortravel" object="this.ship" />
								<match_use_blacklist group="blacklistgroup.civilian" type="blacklisttype.sectoractivity" object="this.ship" />
							</match_parent>
						</match_parent>
					</match_seller>
				</find_sell_offer>
			</do_else>

			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Finding sell offers used up: ' + (player.age-$PerformanceTime) + ' Seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Found Station need offers: ' + $Demands.count + ' Warebasket count: ' + $wareBasket.count + ' Sellers found: '+ $Supplier.count" output="false" append="true" />

			<create_list name="$TradeTargets" />
			<create_list name="$TradeWares" />
			<create_list name="$TradeAmounts" />
			<create_list name="$BuyerList" />

			<!-- Trade find logic -->
			<do_if value="$Supplier.count gt 0 and $wareBasket.count gt 0">
				<set_value name="$OccupiedCargo" exact="0" />
				<sort_trades name="$SupplierList" tradelist="$Supplier" sorter="amount" />

				<create_list name="$SupplierSorted" />
				<!-- Invert Supplies (Highest stock first) -->
				<do_all exact="$SupplierList.count" counter="$vy">
					<append_to_list name="$SupplierSorted" exact="$SupplierList.{$SupplierList.count-$vy+1}" />
				</do_all>
				<remove_value name="$SupplierList" />

				<do_all exact="$Demands.count" counter="$idx">
					<do_if value="$OccupiedCargo + $MinCargoSize / 2 ge $ShipCapacity">
						<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Cargo full, skipping'" output="false" append="true" />
						<break />
					</do_if>

					<set_value name="$someBuyer" exact="$Demands.{$idx}" />
					<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Buyer: ' + $someBuyer.owner.knownname + ' ' + $someBuyer.owner.idcode + ' Ware Required: ' + $someBuyer.ware.id + ' RequiredAmount: ' + $someBuyer.desiredamount" output="false" append="true" />

					<do_if value="($someBuyer.desiredamount * $someBuyer.ware.volume) lt $MinCargoSize">
						<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Demand too little: ' + $someBuyer.ware.id" output="false" append="true" />
						<break />
					</do_if>

					<do_all exact="$SupplierSorted.count" counter="$ctr">
						<do_if value="$OccupiedCargo + $MinCargoSize / 2 ge $ShipCapacity">
							<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Cargo full, skipping'" output="false" append="true" />
							<break />
						</do_if>

						<set_value name="$someSeller" exact="$SupplierSorted.{$ctr}" />
						<!-- avoid buying/selling to yourself -->
						<do_if value="$someBuyer.ware.id == $someSeller.ware.id and ($someSeller.owner != $someBuyer.owner or $someBuyer.owner.isclass.buildstorage)">
							<set_value name="$WareInList" exact="0" />
							<set_value name="$WareCountBought" exact="0" />
							<do_all exact="$TradeTargets.count" counter="$twc">
								<do_if value="$TradeTargets.{$twc}.ware == $someSeller.ware and $TradeTargets.{$twc} == $someBuyer">
									<set_value name="$WareInList" exact="$twc" />
									<set_value name="$WareCountBought" exact="$TradeAmounts.{$twc}" />
								</do_if>
							</do_all>
							<do_if value="$someBuyer.owner.owner == this.ship.owner">
								<set_value name="$buyofferamount" exact="$someBuyer.desiredamount" />
							</do_if>
							<do_else>
								<set_value name="$buyofferamount" exact="$someBuyer.amount" />
							</do_else>
							<set_value name="$CargoWareFree" exact="(($ShipCapacity - $OccupiedCargo)/$someSeller.ware.volume)" />
							<set_value name="$cargoHauled" exact="[$CargoWareFree,$someSeller.amount,($buyofferamount-$WareCountBought)].min" />
							<set_value name="$cargoSpace" exact="($cargoHauled * $someSeller.ware.volume)" />
							<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Seller: ' + $someSeller.owner.knownname + ' ' + $someSeller.owner.idcode + ' Min trade cargo:  ' + $MinCargoSize + ' Buy cargo space requirement: ' + $cargoSpace + ' Trade amount: ' + $cargoHauled +  ' Already bought Wares: ' + $WareCountBought + ' Desired amount ' + $buyofferamount + ' Desired amount left: ' + ($buyofferamount-$WareCountBought) + ' Seller offer: ' + $someSeller.amount + ' Stocklevel: ' + $someSeller.stocklevel" output="false" append="true" />
							<!-- Test if ship capacity is reached, min trade volume is reached and allow one extra half sized trade when it fills the cargo 100% -->
							<do_if value="$cargoHauled gt 0 and $ShipCapacity ge ($OccupiedCargo + $cargoSpace) and ($cargoSpace gt $MinCargoSize or ($cargoHauled == $CargoWareFree and $cargoSpace ge $MinCargoSize / 2) or $cargoHauled == ($buyofferamount-$WareCountBought)) ">
								<do_if value="$WareInList">
									<set_value name="$TradeAmounts.{$WareInList}" exact="$TradeAmounts.{$WareInList} + $cargoHauled" />
									<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Modify Ware : ' + $someSeller.ware.id + ' Amount: ' + $cargoHauled" output="false" append="true" />
								</do_if>
								<do_else>
									<append_to_list name="$TradeAmounts" exact="$cargoHauled" />
									<append_to_list name="$TradeTargets" exact="$someBuyer" />
									<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Add Ware : ' + $someBuyer.ware.id + ' Amount: ' + $cargoHauled" output="false" append="true" />
								</do_else>

								<set_value name="$OccupiedCargo" exact="$OccupiedCargo + $cargoSpace" />
								<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Query Buy: : ' + $someSeller.ware.id + ' Amount: ' + $cargoHauled + ' DesiredAmount left: ' + ($buyofferamount-$WareCountBought)" output="false" append="true" />
								<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' New occupied space : ' + $OccupiedCargo + ' MaxSpace: ' + $ShipCapacity" output="false" append="true" />
								<do_if value="$someSeller.available">
									<create_trade_order name="$getSupply" object="this.object" tradeoffer="$someSeller" amount="$cargoHauled" immediate="false" />
								</do_if>
							</do_if>
						</do_if>
					</do_all>
				</do_all>

				<do_if value="$BuilderList and $TradeTargets.count == 0">
					<remove_value name="$SupplierSorted" />
					<remove_value name="$Demands" />
					<!-- if this block is reached then $needs is checked for count right as soon as we hit the resume -->
					<set_value name="$needs" exact="[]" />
					<resume label="Supply" />
				</do_if>

				<do_all exact="$TradeTargets.count" counter="$idc">
					<do_if value="$TradeTargets.{$idc}.available">
						<create_trade_order name="$dropSupply" object="this.object" tradeoffer="$TradeTargets.{$idc}" amount="$TradeAmounts.{$idc}" immediate="false" />
						<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Query Sell: : ' + $TradeTargets.{$idc}.ware.id + ' Target:  ' + $TradeTargets.{$idc}.owner.knownname + ' ' + $TradeTargets.{$idc}.owner.idcode + ' Amount ' + $TradeAmounts.{$idc}" output="false" append="true" />
					</do_if>
				</do_all>

				<!-- Leave builder area after selling to builder to avoid traffic jam (no longer used) -->
				<!--  			<do_if value="$BuilderList and $TradeTargets.count">
				<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="'Moving to avoid Traffic Jam'" />
				<select_flight_behaviour entity="this" evasive="true" result="$fb"/>
				<move_to object="this.ship" abortpath="false" destination="this.ship.zone" flightbehaviour="$fb" boost="false">
					<position object="this.ship" min="1km" max="2km"/>
					<interrupt_after_time time="60s"/>
				</move_to>
			</do_if> -->
			</do_if> <!-- the stations have supply and demand -->

			<!-- Debug: Finding trade routes performance metrics-->
			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Finding trade routes used up: ' + (player.age-$PerformanceTime) + ' seconds'" />
			<set_value name="$PerformanceTime" exact="player.age" />

			<remove_value name="$TradeAmounts" />
			<remove_value name="$TradeTargets" />
			<remove_value name="$TradeAmounts" />
			<remove_value name="$BuyerList" />


			<remove_value name="$WareInList" />
			<remove_value name="$WareCountBought" />
			<remove_value name="$OccupiedCargo" />

			<remove_value name="$wareBasket" />
			<remove_value name="$Demands" />

			<debug_to_file chance="$debugchance" name="'SupplyMule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'MulesExtended'" text="' Script used up: ' + (player.age-$StartTime) + '  seconds'" />
			<wait min="3min" max="5min" />
			<label name="end" />
		</actions>
	</attention>
</aiscript>