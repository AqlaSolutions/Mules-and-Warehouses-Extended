<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="distrimule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://x4libonline.ddns.net\libraries\aiscripts.xsd" version="1">
	<!-- Setup context menu order-->
	<order id="DistriMule" name="M3- Distribute Mule" description="Ferries supplies between warehouses" category="trade" infinite="true">
		<params>
			<!-- menu option: Source Warehouse (Define Source Station)-->
			<param name="sourceStation" required="false" default="null" type="object" text="Source Warehouse" comment="The source station">
				<input_param name="class" value="[class.station]" />
			</param>
			<!-- menu option: Min Storage-->
			<param name="minStorage" required="false" default="20" type="number" text="Min Storage" comment="Min storage to put in every warehouse">
				<input_param name="startvalue" value="20" />
				<input_param name="min" value="0" />
				<input_param name="max" value="98" />
				<input_param name="step" value="1" />
			</param>
			<!-- menu option: Static Storage-->
			<param name="staticStorage" required="false" default="40" type="number" text="Static Storage" comment="Min storage to put in every warehouse">
				<input_param name="startvalue" value="40" />
				<input_param name="min" value="0" />
				<input_param name="max" value="99" />
				<input_param name="step" value="1" />
			</param>
			<!-- menu option: Max Storage-->
			<param name="maxStorage" required="false" default="70" type="number" text="Max Storage" comment="Max gate distance to sell.">
				<input_param name="startvalue" value="70" />
				<input_param name="min" value="0" />
				<input_param name="max" value="100" />
				<input_param name="step" value="1" />
			</param>
			<!-- menu option: WareBasket list-->
			<param name="specialWareBasket" required="false" default="[]" type="list" text="Wares (all by default)" comment="Warebasket">
				<input_param name="type" value="'ware'" />
				<input_param name="cancarry" value="this.ship" />
			</param>
			<param name="destList" required="false" default="[]" type="list" text="Target Warehouses" comment="Points to visit">
				<input_param name="type" value="'object'" />
			</param>
		</params>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true" />
		</requires>
	</order>

	<interrupts>
		<handler ref="AttackHandler" />
		<handler ref="MissileLockHandler" />
		<handler ref="ScannedHandler" />
		<handler ref="InspectedHandler" />
		<handler ref="FoundAbandonedHandler" />
		<handler ref="ResupplyHandler" />
		<handler ref="JobRemoveRequestHandler" />
		<handler ref="TargetInvalidHandler" />
	</interrupts>

	<init>
		<set_value name="$object" exact="this.assignedcontrolled" />
		<set_order_syncpoint_reached order="this.ship.order" />
		<set_command_action commandaction="commandaction.searchingtrades" />
		<do_if value="($sourceStation.owner == this.ship.owner)">
			<set_object_commander object="this.ship" commander="$sourceStation" />
		</do_if>
	</init>

	<attention min="unknown">
		<actions>
			<label name="start" />

			<set_value name="$needFound" exact="false" />
			<set_value name="$needFound2" exact="false" />
			<set_value name="$supplyTarget" exact="0" />
			<set_value name="$supplySource" exact="0" />
			<create_list name="$supplies" />
			<create_list name="$needs" />
			<create_list name="$innerList" />
			<create_list name="$outerList" />
			<create_list name="$tempList" />

			<!-- Sell leftover cargo before regular Mule duty -->
			<set_value name="$currentcargo" exact="this.ship.cargo.list" />
			<do_if value="$currentcargo.count">
				<find_buy_offer tradepartner="this.ship" space="$sourceStation.cluster" result="$needs" wares="$currentcargo" multiple="true">
					<match_buyer>
						<match owner="this.ship.owner" />
					</match_buyer>
				</find_buy_offer>
				<sort_trades name="$needs" tradelist="$needs" sorter="totalvolume" />
				<do_all exact="$currentcargo.count" counter="$cc">
					<set_value name="$ccNeedFound" exact="false" />
					<do_all exact="$needs.count" counter="$ccn">
						<do_if value="$currentcargo.{$cc}" exact="$needs.{$ccn}.ware">
							<do_if value="not $ccNeedFound">
								<set_value name="$cargoHauled" exact="[this.ship.cargo.{$currentcargo.{$cc}}.count,$needs.{$ccn}.amount].min" />
								<create_trade_order name="$dropSupply" object="this.object" tradeoffer="$needs.{$ccn}" amount="$cargoHauled" immediate="false" />
							</do_if>
							<set_value name="$ccNeedFound" exact="true" />
						</do_if>
					</do_all>
				</do_all>
				<wait exact="100ms" />
			</do_if>

			<set_value name="$wareBasket" exact="$specialWareBasket" />
			<do_if value="$wareBasket == []">
				<do_if value="$sourceStation.tradewares.count">
					<set_value name="$wareBasket" exact="$sourceStation.tradewares.list" />
				</do_if>
				<do_elseif value="$sourceStation.products.count">
					<set_value name="$wareBasket" exact="$sourceStation.products.list" />
				</do_elseif>
			</do_if>

			<find_sell_offer tradepartner="this.ship" seller="$sourceStation" result="$supplies" wares="$wareBasket" multiple="true" />

			<!-- Finding buyers -->
			<do_all exact="$destList.count" counter="$customer">
				<find_buy_offer tradepartner="this.ship" buyer="$destList.{$customer}" result="$tempList" wares="$wareBasket" excludeempty="false" multiple="true" />

				<do_all exact="$tempList.count" counter="$tl">
					<append_to_list name="$needs" exact="$tempList.{$tl}" />
				</do_all>
			</do_all>

			<!-- Distribution Mule Routine -->
			<do_all exact="2">
				<do_if value="$needs.count gt 0 and $supplies.count gt 0">
					<sort_trades name="$innerList" tradelist="$needs" sorter="totalvolume" />
					<sort_trades name="$outerList" tradelist="$supplies" sorter="volume" />

					<do_all exact="$outerList.count" counter="$idx">
						<set_value name="$sourceCargoRatio" exact="($outerList.{$idx}.owner.cargo.{$outerList.{$idx}.ware}.count * 100 / [$outerList.{$idx}.owner.cargo.{$outerList.{$idx}.ware}.target, 1].max)" />
						<do_if value="(not $needFound) and ($sourceCargoRatio gt $staticStorage)">
							<set_value name="$someOuter" exact="$outerList.{$idx}" />

							<do_all exact="$innerList.count" counter="$ctr">
								<set_value name="$targetCargoRatio" exact="($innerList.{$ctr}.owner.cargo.{$innerList.{$ctr}.ware}.count * 100 / [$innerList.{$ctr}.owner.cargo.{$innerList.{$ctr}.ware}.target, 1].max)" />
								<do_if value="(not $needFound) and ($targetCargoRatio lt $minStorage or ($sourceCargoRatio gt $maxStorage and $sourceCargoRatio gt ($targetCargoRatio + 10)))">
									<set_value name="$someInner" exact="$innerList.{$ctr}" />

									<do_if value="$someOuter.ware.id" exact="$someInner.ware.id">
										<do_if value="$someInner.owner.owner == this.ship.owner">
											<set_value name="$targetAmount" exact="$someInner.desiredamount" />
										</do_if>

										<do_else>
											<set_value name="$targetAmount" exact="$someInner.amount" />
										</do_else>

										<set_value name="$cargoHauled" exact="[this.ship.cargo.{$someInner.ware}.free,$targetAmount,$someOuter.amount].min" />
										<do_if value="($cargoHauled gt (this.ship.cargo.{$someInner.ware}.max / 1.25)) or ($needFound2 and ($cargoHauled gt (this.ship.cargo.{$someInner.ware}.max / 2))) ">
											<set_value name="$supplyTarget" exact="$someInner" />
											<set_value name="$supplySource" exact="$someOuter" />
											<set_value name="$needFound" exact="true" />
										</do_if>
									</do_if>
								</do_if>
							</do_all>

							<!--need found -->
							<do_if value="$needFound">
								<create_trade_order name="$getSupply" object="this.object" tradeoffer="$supplySource" amount="$cargoHauled" immediate="false" />
								<create_trade_order name="$dropSupply" object="this.object" tradeoffer="$supplyTarget" amount="$cargoHauled" immediate="false" />
							</do_if>
						</do_if>
					</do_all>

				</do_if> <!-- the stations have supply and demand -->
				<set_value name="$needFound2" exact="$needFound" />
				<set_value name="$needFound" exact="false" />
				<find_buy_offer tradepartner="this.ship" buyer="$sourceStation" result="$needs" wares="$wareBasket" excludeempty="false" multiple="true" />

				<do_if value="$needFound2">
					<find_sell_offer tradepartner="this.ship" seller="$supplyTarget.owner" result="$supplies" wares="$wareBasket" multiple="true" />
				</do_if>
				<do_else>
					<do_all exact="$destList.count" counter="$customer">
						<find_sell_offer tradepartner="this.ship" seller="$destList.{$customer}" result="$tempList" wares="$wareBasket" multiple="true" />
						<do_all exact="$tempList.count" counter="$tl">
							<append_to_list name="$supplies" exact="$tempList.{$tl}" />
						</do_all>
					</do_all>
				</do_else>
			</do_all>

			<remove_value name="$supplyTarget" />
			<remove_value name="$supplySource" />
			<remove_value name="$supplies" />
			<remove_value name="$needs" />
			<remove_value name="$innerList" />
			<remove_value name="$outerList" />
			<remove_value name="$sellspaces" />
			<remove_value name="$tempList" />

			<wait exact="1000ms" />
			<resume label="start" />
		</actions>
	</attention>
</aiscript>