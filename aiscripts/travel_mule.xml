<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="travelmule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="G:\Dev Projects\X4 Foundations\X4_Assets\aiscripts\aiscripts.xsd" version="1">
	<order id="TravelMule" name="M1- Travel Mule" description="Ferries supplies between stations" category="trade" infinite="true">
		<params>
			<param name="sourceStation" required="false" default="null" type="object" text="Source Station" comment="The source station">
				<input_param name="class" value="[class.station]" />
			</param>
			<param name="tradeWithBig" required="false" type="bool" default="false" text="Target NPC Shipyards" comment="Assign to trade with all NPC shipyards, wharfs, and equip docks" />
			<param name="tradeWithAll" required="false" type="bool" default="false" text="Target all NPC stations" comment="Assign to trade with all NPC stations" />
			<param name="maxDist" required="false" default="15" type="number" text="Max Jumps" comment="Max gate distance to sell.">
				<input_param name="startvalue" value="15" />
				<input_param name="min" value="0" />
				<input_param name="max" value="15" />
				<input_param name="step" value="1" />
			</param>
			<param name="specialWareBasket" required="false" default="[]" type="list" text="Wares (all by default)" comment="Warebasket">
				<input_param name="type" value="'ware'" />
				<input_param name="cancarry" value="this.ship" />
			</param>
			<param name="destList" required="false" default="[]" type="list" text="Customers (replaces 'Target' options)" comment="Points to visit">
				<input_param name="type" value="'object'" />
			</param>
		</params>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true" />
		</requires>
	</order>

	<interrupts>
		<handler ref="AttackHandler" />
		<handler ref="MissileLockHandler" />
		<handler ref="ScannedHandler" />
		<handler ref="InspectedHandler" />
		<handler ref="FoundAbandonedHandler" />
		<handler ref="ResupplyHandler" />
		<handler ref="JobRemoveRequestHandler" />
		<handler ref="TargetInvalidHandler" />
	</interrupts>

	<init>
		<set_value name="$object" exact="this.assignedcontrolled" />
		<set_order_syncpoint_reached order="this.ship.order" />
		<set_command_action commandaction="commandaction.searchingtrades" />
		<do_if value="($sourceStation.owner == this.ship.owner)">
			<set_object_commander object="this.ship" commander="$sourceStation" />
		</do_if>
	</init>

	<attention min="unknown">
		<actions>
			<label name="start" />

			<set_value name="$needFound" exact="false" />
			<set_value name="$supplyTarget" exact="0" />
			<set_value name="$supplySource" exact="0" />
			<set_value name="$bestProfit" exact="0" />
			<set_value name="$bestCargo" exact="0" />
			<set_value name="$currentProfit" exact="0" />
			<create_list name="$supplies" />
			<create_list name="$needs" />
			<create_list name="$innerList" />
			<create_list name="$outerList" />
			<create_list name="$tempList" />

			<!-- Sell leftover cargo before regular Mule duty -->
			<set_value name="$currentcargo" exact="this.ship.cargo.list" />
			<do_if value="$currentcargo.count">
				<find_buy_offer tradepartner="this.ship" space="$sourceStation.cluster" result="$needs" wares="$currentcargo" multiple="true">
					<match_buyer>
						<match owner="this.ship.owner" />
					</match_buyer>
				</find_buy_offer>
				<sort_trades name="$needs" tradelist="$needs" sorter="totalvolume" />
				<do_all exact="$currentcargo.count" counter="$cc">
					<set_value name="$ccNeedFound" exact="false" />
					<do_all exact="$needs.count" counter="$ccn">
						<do_if value="$currentcargo.{$cc}" exact="$needs.{$ccn}.ware">
							<do_if value="not $ccNeedFound">
								<set_value name="$cargoHauled" exact="[this.ship.cargo.{$currentcargo.{$cc}}.count,$needs.{$ccn}.amount].min" />
								<create_trade_order name="$dropSupply" object="this.object" tradeoffer="$needs.{$ccn}" amount="$cargoHauled" immediate="false" />
							</do_if>
							<set_value name="$ccNeedFound" exact="true" />
						</do_if>
					</do_all>
				</do_all>
				<wait exact="100ms" />
			</do_if>

			<set_value name="$wareBasket" exact="$specialWareBasket" />
			<do_if value="$wareBasket == []">
				<do_if value="not $sourceStation.tradewares == []">
					<set_value name="$wareBasket" exact="$sourceStation.tradewares" />
				</do_if>
				<do_elseif value="not $sourceStation.products == []">
					<set_value name="$wareBasket" exact="$sourceStation.products" />
				</do_elseif>
			</do_if>

			<find_sell_offer tradepartner="this.ship" seller="$sourceStation" result="$supplies" wares="$wareBasket" multiple="true" />

			<!-- Finding buyers -->
			<do_if value="$destList == []">
				<do_if value="$maxDist == 15">
					<do_if value="$tradeWithAll">
						<find_buy_offer tradepartner="this.ship" space="player.galaxy" result="$needs" wares="$wareBasket" multiple="true">
							<match_buyer>
								<match_relation_to object="this.ship" relation="enemy" comparison="not" />
								<match tradesknownto="this.owner" />
								<match owner="this.ship.owner" negate="true" />
								<match class="class.station" />
							</match_buyer>
						</find_buy_offer>
					</do_if>
					<do_elseif value="$tradeWithBig">
						<find_buy_offer tradepartner="this.ship" space="player.galaxy" result="$needs" wares="$wareBasket" multiple="true">
							<match_buyer>
								<match_relation_to object="this.ship" relation="enemy" comparison="not" />
								<match tradesknownto="this.owner" />
								<match owner="this.ship.owner" negate="true" />
								<match class="class.station" />
								<match_any>
									<match canbuildships="true" />
									<match canequipships="true" />
								</match_any>
							</match_buyer>
						</find_buy_offer>
					</do_elseif>
				</do_if>
				<do_else>
					<find_cluster_in_range distances="$clusterstable" multiple="true" object="$sourceStation.cluster" mindistance="0" maxdistance="$maxDist" />
					<set_value name="$sellspaces" exact="$clusterstable.keys.sorted" />
					<remove_value name="$clusterstable" />
					<do_all exact="$sellspaces.count" counter="$sector">
						<do_if value="$tradeWithAll">
							<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$tempList" wares="$wareBasket" multiple="true">
								<match_buyer>
									<match_relation_to object="this.ship" relation="enemy" comparison="not" />
									<match tradesknownto="this.owner" />
									<match owner="this.ship.owner" negate="true" />
									<match class="class.station" />
								</match_buyer>
							</find_buy_offer>
						</do_if>
						<do_elseif value="$tradeWithBig">
							<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$tempList" wares="$wareBasket" multiple="true">
								<match_buyer>
									<match_relation_to object="this.ship" relation="enemy" comparison="not" />
									<match tradesknownto="this.owner" />
									<match owner="this.ship.owner" negate="true" />
									<match class="class.station" />
									<match_any>
										<match canbuildships="true" />
										<match canequipships="true" />
									</match_any>
								</match_buyer>
							</find_buy_offer>
						</do_elseif>

						<do_all exact="$tempList.count" counter="$tl">
							<append_to_list name="$needs" exact="$tempList.{$tl}" />
						</do_all>
					</do_all>
				</do_else>
			</do_if>
			<do_else>
				<do_all exact="$destList.count" counter="$customer">
					<find_buy_offer tradepartner="this.ship" buyer="$destList.{$customer}" result="$tempList" wares="$wareBasket" multiple="true" />

					<do_all exact="$tempList.count" counter="$tl">
						<append_to_list name="$needs" exact="$tempList.{$tl}" />
					</do_all>
				</do_all>
			</do_else>

			<!-- Travelling Mule duty -->
			<do_if value="$needs.count gt 0 and $supplies.count gt 0">
				<set_value name="$innerList" exact="$needs" />
				<sort_trades name="$outerList" tradelist="$supplies" sorter="volume" />

				<do_all exact="$outerList.count" counter="$idx">
					<do_if value="not $needFound">
						<set_value name="$someOuter" exact="$outerList.{$idx}" />
						<do_all exact="$innerList.count" counter="$ctr">
							<set_value name="$someInner" exact="$innerList.{$ctr}" />
							<do_if value="$someOuter.ware.id" exact="$someInner.ware.id">
								<do_if value="$someInner.owner.owner == this.ship.owner">
									<set_value name="$targetAmount" exact="$someInner.desiredamount" />
								</do_if>
								<do_else>
									<set_value name="$targetAmount" exact="$someInner.amount" />
								</do_else>
								<set_value name="$cargoHauled" exact="[this.ship.cargo.{$someInner.ware}.free,$targetAmount,$someOuter.amount].min" />
								<set_value name="$currentProfit" exact="$cargoHauled * ($someInner.unitprice - $someOuter.unitprice)" />
								<do_if value="($currentProfit gt $bestProfit) and ($cargoHauled gt (this.ship.cargo.{$someInner.ware}.max / 1.25))">
									<set_value name="$supplyTarget" exact="$someInner" />
									<set_value name="$bestCargo" exact="$cargoHauled" />
									<do_if value="not $needFound">
										<set_value name="$needFound" exact="true" />
										<set_value name="$supplySource" exact="$someOuter" />
									</do_if>
								</do_if>

							</do_if> <!--need found -->
						</do_all> <!-- inner loop -->
						<do_if value="$needFound">
							<create_trade_order name="$getSupply" object="this.object" tradeoffer="$supplySource" amount="$bestCargo" immediate="false" />
							<create_trade_order name="$dropSupply" object="this.object" tradeoffer="$supplyTarget" amount="$bestCargo" immediate="false" />
						</do_if>
					</do_if>
				</do_all> <!-- outer loop -->
			</do_if> <!-- the stations have supply and demand -->


			<remove_value name="$supplyTarget" />
			<remove_value name="$supplySource" />
			<remove_value name="$supplies" />
			<remove_value name="$needs" />
			<remove_value name="$innerList" />
			<remove_value name="$outerList" />

			<wait exact="1000ms" />
			<resume label="start" />
		</actions>
	</attention>
</aiscript>