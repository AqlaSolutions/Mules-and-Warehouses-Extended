<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="mule.lib.evaluate_tradeoffers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="p:\X4\Database\libraries\aiscripts.xsd" version="8">
	<!-- Compare tradeoffers by profit and return the most profitable one -->
	<params>
		<!-- list of possible buyoffers -->
		<param name="buyoffers"/>
		<!-- list of possible selloffers -->
		<param name="selloffers" />
		<!-- shipEntity that performes the trade. -->
		<!-- determines the account used to perform trades -->
		<!-- determines the cargo size -->
		<param name="shipEntity"/>
		<!-- list of already used selloffers -->
		<param name="usedSelloffers"/>
		<!-- player buy modifier to adjust supply prices -->
		<param name="sameFactionBuyMod"/>
		<!-- current amount of cargo reserved for other wares -->
		<param name="occupiedCargo"/>
		<!-- Enable trading for build storage -->
		<!-- if the trade will finish off the build storage for that good it will be allowed for low volumes -->
		<param name="tradeForBuildStorage" default="false"/>
		<!-- enable/disable debug messages -->
		<param name="debugchance"/>
		<param name="debugFileName"/>
		<param name="debugDirName"/>
  </params>
  <attention min="unknown">
    <actions>
			<!-- Default values for best trade -->
			<set_value name="$bestProfit" exact="0" />
			<set_value name="$bestAmount" exact="0" />
			<set_value name="$bestNeedTrade" exact="null" />
			<set_value name="$bestSupplyTrade" exact="null" />

			<debug_to_file chance="$debugchance" name="$debugFileName" directory="$debugDirName" text="'----- trade offer comparisons'" />
			<!-- nested loop(s) over the trade offers -->
			<do_all exact="$buyoffers.count" counter="$i">
				<set_value name="$someNeed" exact="$buyoffers.{$i}" />
				<do_all exact="$selloffers.count" counter="$j">
					<set_value name="$someSupply" exact="$selloffers.{$j}" />
					
					<!-- ignores supply side trades already found -->
					<do_if value="$usedSelloffers.indexof.{$someSupply}">
						<continue />
					</do_if>
					<!-- only do any work if the offers are for the same ware -->
					<do_if value="$someNeed.ware.id != $someSupply.ware.id">
						<continue />
					</do_if>

					<!-- how much does the need want? -->
					<get_ware_reservation object="$someNeed.owner" type="buy" ware="$someNeed.ware" result="$needReservations" />
					<set_value name="$targetOfferedAmount" exact="[$someNeed.desiredamount-$needReservations,0].max" />
					<!-- how much does the supply have to offer? -->
					<clamp_trade_amount trade="$someSupply" amount="$someSupply.amount" buyer="$shipEntity.assignedcontrolled" seller="$someSupply.seller" result="$affordableAmount" />
					<!-- how much can we haul? -->
					<set_value name="$cargoHauled" exact="[(($shipEntity.ship.cargo.capacity.container-$occupiedCargo)/$someNeed.ware.volume)i, $shipEntity.ship.cargo.{$someNeed.ware}.free].min" />

					<!-- the amount for the trade is the minimum of the three amounts -->
					<set_value name="$tradeAmount" exact="[$targetOfferedAmount,$affordableAmount,$cargoHauled].min" />

					<!-- if the trade is too small, move on -->
					<!-- however, if the trade will finish off the build storage for that good, let it through -->
					<do_if value="($tradeForBuildStorage) and ($tradeAmount*$someNeed.ware.volume lt $minCargoSize) and ($tradeAmount != $targetOfferedAmount) and ($tradeAmount != 0)">
						<continue />
					</do_if>
					<do_elseif value="$tradeAmount == 0">
						<continue />
					</do_elseif>

					<!-- how much profit for this trade? -->
					<!-- If we use our own stations, we adjust the supply price by the sameFactionBuyMod to allow preferential treatment of player/owned supply chains -->
					<do_if value="$someSupply.owner == $shipEntity.owner">
						<set_value name="$currentProfit" exact="$cargoHauled * ($someNeed.unitprice - $someSupply.unitprice*$sameFactionBuyMod/100)" />
					</do_if>
					<do_else>
						<set_value name="$currentProfit" exact="$cargoHauled * ($someNeed.unitprice - $someSupply.unitprice)" />
					</do_else>

					<do_if value="$debugchance">
						<debug_to_file chance="$debugchance" name="$debugFileName" directory="$debugDirName" text="$someNeed.ware
											+ ' target desired amount ' + $targetOfferedAmount
											+ ' supply amount: ' + $affordableAmount
											+ ' ship can hold: ' + $cargoHauled
											+ ' amount will be: ' + $tradeAmount
											+ ' need unitprice: ' + $someNeed.unitprice
											+ ' supp unitprice: ' + $someSupply.unitprice
											+ ' faction buy modifier: ' + $sameFactionBuyMod
											+ ' profit: ' + $currentProfit" /> <!-- TODO: better debug message to show owners of tradepartners -->
					</do_if>

					<!-- if we found a new best trade, set it! -->
					<do_if value="$currentProfit > $bestProfit">
						<set_value name="$bestProfit" exact="$currentProfit" />
						<set_value name="$bestNeedTrade" exact="$someNeed" />
						<set_value name="$bestSupplyTrade" exact="$someSupply" />
						<set_value name="$bestAmount" exact="$tradeAmount" />
					</do_if>
				</do_all>
			</do_all>

			<!-- Return the best avalible trade combination -->
			<return>
				<retval name="bestProfit" value="$bestProfit"/>
				<retval name="bestAmount" value="$bestAmount"/>
				<retval name="bestNeedTrade" value="$bestNeedTrade"/>
				<retval name="bestSupplyTrade" value="$bestSupplyTrade"/>
			</return>
    </actions>
  </attention>
</aiscript>
